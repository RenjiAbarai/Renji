# name: Node.js Package

# on:
#   # 触发条件1：blog 分支收到 push 后执行任务。
#   push:
#     branches:
#       - blog
#   # 触发条件2：手动按钮
#   workflow_dispatch:

# jobs:
#   publish-gpr:
#     # 指定的运行器环境
#     runs-on: ubuntu-latest
#     # 设置 node 版本
#     strategy:
#       matrix:
#         node-version: [16]
#     steps:
#       # 使用别人封装好的的action，用于clone该仓库的源码到工作流中
#       - name: Checkout
#         uses: actions/checkout@blog
#       # 在工作流中安装node环境
#       - name: Setup node
#       - uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           # 设置发包 npm 地址仓库
#           registry-url: https://registry.npmjs.org
#       # 打包代码生成环境
#       - name: Build
#         run: |
#             npm install # 安装依赖
#             npm run build # 打包前端代码到生产环境
#       # 执行部署
#       - name: Deploy
#         # 这个 action 会根据配置自动推送代码到指定分支
#         uses: JamesIves/github-pages-deploy-action@releases/v3
#         with:
#           # 指定密钥，即在第一步中设置的
#           ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#           # 指定推送到的远程分支
#           BRANCH: blog-pages
#           # 指定构建之后的产物要推送哪个目录的代码
#           FOLDER: build
#       - run: npm publish
#         env:
#           # 刚刚设置的 NPM_TOKEN
#           NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
